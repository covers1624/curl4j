name: Build libffi

on:
#  workflow_dispatch:
  push:

env:
  FILE_SERVER: ${{ secrets.FILE_SERVER }}
  FILE_SERVER_USER: ${{ secrets.FILE_SERVER_USER }}
  FILE_SERVER_PASSWORD: ${{ secrets.FILE_SERVER_PASSWORD }}

jobs:
  build_linux_x64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: |
          .github/scripts/build_libffi.sh 1d0a28ab5a2ee2e12b0650d69184d561cd1fd83c linux_x64

  build_linux_aarch64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            export FILE_SERVER=${{ secrets.FILE_SERVER }}
            export FILE_SERVER_USER=${{ secrets.FILE_SERVER_USER }}
            export FILE_SERVER_PASSWORD=${{ secrets.FILE_SERVER_PASSWORD }}
            apt update && apt install -y git zip unzip curl autoconf build-essential libtool
            .github/scripts/build_libffi.sh 1d0a28ab5a2ee2e12b0650d69184d561cd1fd83c linux_arm64

  build_windows_x64:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Setup Msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            base-devel
            autoconf-wrapper
            autoconf
            automake
            libtool
            make
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-gcc-libs
            curl
            zip
            unzip
      - run: .github/scripts/build_libffi.sh 1d0a28ab5a2ee2e12b0650d69184d561cd1fd83c windows_x64
        shell: msys2 {0}
